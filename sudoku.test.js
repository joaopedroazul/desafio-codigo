const sudoku = require('./sudoku')


test('teste 1 com exemplo definido no Readme', () => {
    result = sudoku.validateSudoku(
    [["5","3",".",".","7",".",".",".","."]
    ,["6",".",".","1","9","5",".",".","."]
    ,[".","9","8",".",".",".",".","6","."]
    ,["8",".",".",".","6",".",".",".","3"]
    ,["4",".",".","8",".","3",".",".","1"]
    ,["7",".",".",".","2",".",".",".","6"]
    ,[".","6",".",".",".",".","2","8","."]
    ,[".",".",".","4","1","9",".",".","5"]
    ,[".",".",".",".","8",".",".","7","9"]])
  expect(result).toBe(true);
});


test('teste 2 com exemplo definido no Readme', () => {
    result = sudoku.validateSudoku(
    [["8","3",".",".","7",".",".",".","."]
    ,["6",".",".","1","9","5",".",".","."]
    ,[".","9","8",".",".",".",".","6","."]
    ,["8",".",".",".","6",".",".",".","3"]
    ,["4",".",".","8",".","3",".",".","1"]
    ,["7",".",".",".","2",".",".",".","6"]
    ,[".","6",".",".",".",".","2","8","."]
    ,[".",".",".","4","1","9",".",".","5"]
    ,[".",".",".",".","8",".",".","7","9"]])
  expect(result).toBe(false);
});

test('teste 3 com sudoku semi completo', () => {
    result = sudoku.validateSudoku(
    [["5","3","4",".","7",".","9",".","2"]
    ,["6",".","2","1","9","5",".","4","."]
    ,[".","9","8","3","4",".",".","6","."]
    ,["8",".","9",".","6",".","4",".","3"]
    ,["4","2","6","8",".","3","7",".","1"]
    ,["7",".",".",".","2",".",".",".","6"]
    ,[".","6",".","5",".","7","2","8","."]
    ,[".","8",".","4","1","9",".",".","5"]
    ,["3","4","5",".","8",".","6","7","9"]])
  expect(result).toBe(true);
});


test('teste 4 com erros nos quadrados', () => {
    result = sudoku.validateSudoku(
    [["8","3",".",".","7",".",".","2","1"]
    ,["6",".",".","1","9","5",".",".","."]
    ,[".","9","1","2",".",".",".","6","."]
    ,[".",".",".",".","6",".",".",".","3"]
    ,["4",".",".","8","5","3",".",".","1"]
    ,["7",".","4",".","2",".","3",".","6"]
    ,[".","6",".",".",".",".","2","8","."]
    ,[".",".","7","4","1","9",".",".","5"]
    ,[".",".",".",".","3",".","8","7","9"]])
  expect(result).toBe(false);
});